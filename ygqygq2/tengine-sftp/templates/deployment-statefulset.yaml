{{- if .Values.statefulset.enabled }}
apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
{{- else }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
{{- end }}
metadata:
  name: {{ template "tengine-sftp.fullname" . }}
  labels:
    app: {{ template "tengine-sftp.name" . }}
    chart: {{ template "tengine-sftp.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
{{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.statefulset.enabled }}
  serviceName: {{ template "tengine-sftp.fullname" . }}-headless
  {{- end }}
  {{- if .Values.deploymentStrategy }}
  strategy:
{{ toYaml .Values.deploymentStrategy | indent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "tengine-sftp.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
{{- if or .Values.podAnnotations .Values.metrics.enabled .Values.sftp.enabled }}
      annotations:
  {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
  {{- end }}
  {{- if .Values.metrics.podAnnotations }}
{{ toYaml .Values.metrics.podAnnotations | indent 8 }}
  {{- end }}
  {{- if .Values.sftp.podAnnotations }}
{{ toYaml .Values.sftp.podAnnotations | indent 8 }}
  {{- end }}
{{- end }}
      labels:
        app: {{ template "tengine-sftp.name" . }}
        release: {{ .Release.Name }}
    spec:
{{- include "tengine-sftp.imagePullSecrets" . | indent 6 }}
      {{- if .Values.initContainers }}
      initContainers:
{{ toYaml .Values.initContainers | indent 8 }}
      {{- end }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      containers:
        - name: nginx
          image: {{ template "tengine-sftp.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.securityContext }}
          securityContext:
{{ toYaml .Values.securityContext | indent 12 }}			
          {{- end }}					
          {{- if .Values.lifecycle }}
          lifecycle:
{{ toYaml .Values.lifecycle | indent 12 }}
          {{- end }}
          {{- if .Values.startCommand }}
          command:
{{ toYaml .Values.startCommand |indent 12 }}
          {{- end }}
          env:
{{ toYaml .Values.env | indent 12 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
            {{- range $key, $value := .Values.service.ports }}
            - name: {{ $key }}
              containerPort: {{ $value.port }}
              protocol: {{ $value.protocol }}
            {{- end }}
          {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            {{- if eq .Values.healthCheck.type "http" }}
            httpGet:
              path: {{ .Values.healthCheck.httpPath }}
              port: {{ .Values.healthCheck.port }}
            {{- else }}
            tcpSocket:
              port: {{ .Values.healthCheck.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.healthCheck.livenessInitialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.livenessPeriodSeconds }}
          readinessProbe:
            {{- if eq .Values.healthCheck.type "http" }}
            httpGet:
              path: {{ .Values.healthCheck.httpPath }}
              port: {{ .Values.healthCheck.port }}
            {{- else }}
            tcpSocket:
              port: {{ .Values.healthCheck.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.healthCheck.readinessInitialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.readinessPeriodSeconds }}
          {{- end }}
          volumeMounts:
            {{- if .Values.vhost }}
            - name: {{ template "tengine-sftp.name" . }}-vhost
              mountPath: /usr/local/nginx/conf/vhost
            {{- end }}
            {{- if .Values.config.enabled }}
            - name: {{ template "tengine-sftp.name" . }}-config
              mountPath: {{ .Values.config.mountPath }}
              subPath: {{ .Values.config.subPath }}
              readOnly: {{ .Values.config.readOnly }}
            {{- end }}
            {{- if .Values.secret.enabled }}
            - name: {{ template "tengine-sftp.name" . }}-secret
              mountPath: {{ .Values.secret.mountPath }}
              subPath: {{ .Values.secret.subPath }}
              readOnly: {{ .Values.secret.readOnly }}
            {{- end }}
{{- if .Values.persistentVolume.mountPaths }}
{{ toYaml .Values.persistentVolume.mountPaths | indent 12 }}
{{- end }}
{{- if .Values.metrics.enabled }}
        - name: metrics
          image: {{ template "tengine-sftp.metrics.image" . }}
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
          command: [ '/usr/bin/exporter', '-nginx.scrape-uri', 'http://127.0.0.1:8081/nginx_status']
          ports:
          - name: metrics
            containerPort: 9113
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
{{ toYaml .Values.metrics.resources | indent 12 }}
{{- end }}
{{- if .Values.sftp.enabled }}
        - name: sftp
          image: {{ .Values.sftp.image.repository }}:{{ .Values.sftp.image.tag }}
          imagePullPolicy: {{ .Values.sftp.image.pullPolicy | quote }}
          ports:
          - name: ssh
            containerPort: 22
          livenessProbe:
            tcpSocket:
              port: ssh
            initialDelaySeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            tcpSocket:
              port: ssh
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
{{ toYaml .Values.sftp.resources | indent 12 }}
          volumeMounts:
          - name: config-sshd
            mountPath: /etc/ssh/sshd_config
            subPath: sshd_config
            readOnly: false
          - name: sftp-user
            mountPath: /etc/sftp/
            readOnly: true
          - name: sftp-script
            mountPath: /etc/sftp.d/
            readOnly: false
          - name: data-storage
            mountPath: /home/dev/upload/
{{- end }}
        {{- if .Values.additionalContainers }}
{{ toYaml .Values.additionalContainers | indent 8 }}
        {{- end }}
      volumes:
        {{- if .Values.vhost }}
        - name: {{ template "tengine-sftp.name" . }}-vhost
          configMap:
            name: {{ template "tengine-sftp.fullname" . }}-vhost
        {{- end }}
        {{- if .Values.sftp.enabled }}
        - name: config-sshd
          configMap:
            name: {{ template "tengine-sftp.fullname" . }}-sftp
            items:
            - key: sshd_config
              path: sshd_config
        - name: sftp-user
          configMap:
            name: {{ template "tengine-sftp.fullname" . }}-sftp
            items:
            - key: users.conf
              path: users.conf
        - name: sftp-script
          configMap:
            name: {{ template "tengine-sftp.fullname" . }}-sftp
            items:
            - key: bindmount.sh
              path: bindmount.sh
        {{- end }}
        {{- if .Values.config.enabled }}
        - name: {{ template "tengine-sftp.name" . }}-conf
          configMap:
            name: {{ template "tengine-sftp.fullname" . }}
        {{- end }}
        {{- if .Values.secret.enabled }}
        - name: {{ template "tengine-sftp.name" . }}-secret
          secret:
            secretName: {{ template "tengine-sftp.fullname" . }}
        {{- end }}
        {{- if .Values.deployment.additionalVolumes }}
{{ toYaml .Values.deployment.additionalVolumes | indent 8 }}
        {{- end }}
{{- if not .Values.statefulset.enabled }}
        {{- if .Values.persistentVolume.enabled }}
        - name: data-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistentVolume.existingClaim | default (include "tengine-sftp.fullname" .) }}
        {{- else }}
        - name: data-storage
          emptyDir: {}
        {{- end }}
{{- else }}
  {{- if .Values.persistentVolume.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data-storage
      labels:
        app: {{ template "tengine-sftp.name" . }}
        chart: {{ template "tengine-sftp.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      accessModes:
        - {{ .Values.persistentVolume.accessMode | quote }}
      annotations:
      {{- range $key, $value := $.Values.persistentVolume.annotations }}
        {{ $key }}: {{ $value }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistentVolume.size }}
          {{- if .Values.persistentVolume.storageClass }}
            {{- if (eq "-" .Values.persistentVolume.storageClass) }}
      storageClassName: ""
            {{- else }}
      storageClassName: "{{ .Values.persistentVolume.storageClass }}"
            {{- end }}
          {{- end }}
  {{- else }}
        - name: data-storage
          emptyDir: {}
  {{- end }}
{{- end -}}
